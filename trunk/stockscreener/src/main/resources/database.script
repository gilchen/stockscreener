CREATE TABLE BSE_ICICI_MAPPING(
	STOCK_CODE VARCHAR(10),
	SC_CODE INT(11),
	PRIMARY KEY (STOCK_CODE)
);

CREATE TABLE ALERT(
	ALERT_ID BIGINT AUTO_INCREMENT,
	STOCK_CODE VARCHAR(10),
	TRX_TYPE VARCHAR(20),
	EVENT_DATE DATE,
	OPPORTUNITY_TYPE VARCHAR(50),
	EVENT_PRICE DOUBLE,
	TARGET_PRICE VARCHAR(20),
	SLTP DOUBLE NULL,
	EVENT_TYPE VARCHAR(50),
	QTY INT(5),
	IS_ACTIVE CHAR(1),
	PRIMARY KEY (ALERT_ID),
	FOREIGN KEY (STOCK_CODE) REFERENCES BSE_ICICI_MAPPING (STOCK_CODE)
);

CREATE TABLE NYSE_ALERT(
	ALERT_ID BIGINT AUTO_INCREMENT,
	SYMBOL VARCHAR(30),
	TRX_TYPE VARCHAR(20),
	EVENT_DATE DATE,
	OPPORTUNITY_TYPE VARCHAR(50),
	EVENT_PRICE DOUBLE,
	TARGET_PRICE VARCHAR(20),
	EVENT_TYPE VARCHAR(50),
	QTY INT(5),
	IS_ACTIVE CHAR(1),
	PRIMARY KEY (ALERT_ID)
);

CREATE TABLE BSE(
	TRADE_DATE  DATE
	SC_CODE     INT(11)
	SC_NAME     VARCHAR(30)
	SC_GROUP    VARCHAR(10)
	SC_TYPE     VARCHAR(10)
	OPEN        DOUBLE
	HIGH        DOUBLE
	LOW         DOUBLE
	CLOSE       DOUBLE
	LAST        DOUBLE
	PREVCLOSE   DOUBLE
	NO_TRADES   BIGINT(20)
	NO_OF_SHRS  BIGINT(20)
	NET_TURNOV  DOUBLE
	TDCLOINDI   VARCHAR(10),
	PRIMARY KEY (TRADE_DATE, SC_CODE)
);

CREATE TABLE NYSE(
	TRADE_DATE  DATE,
	SYMBOL      VARCHAR(30),
	OPEN        DOUBLE,
	HIGH        DOUBLE,
	LOW         DOUBLE,
	CLOSE       DOUBLE,
	VOLUME      BIGINT(20),
	PRIMARY KEY (TRADE_DATE, SYMBOL)
);

CREATE TABLE KEY_VALUE(
	K VARCHAR(50),
	V VARCHAR(50),
	PRIMARY KEY (K)
);

CREATE TABLE REPORT(
	REPORT_NAME VARCHAR(50),
	CONTENT     MEDIUMTEXT,
	PRIMARY KEY(REPORT_NAME)
);

CREATE TABLE HOLIDAYS(
	HOLIDAY DATE,
	PRIMARY KEY(HOLIDAY)
);

CREATE TABLE NYSE_TX(
	NYSE_TX_ID BIGINT AUTO_INCREMENT,
	TRX_TYPE VARCHAR(20),
	SYMBOL VARCHAR(30),
	TX_DATE DATE,
	PRICE DOUBLE,
	QTY INT(5),
	TX_FEE DOUBLE,
	COMMENTS VARCHAR(100),
	PRIMARY KEY (NYSE_TX_ID)
);

CREATE TABLE SUMMARY_52_WK_NYSE(
	SNAPSHOT_DT DATE,
	SYMBOL VARCHAR(30),
	MIN_LOW DOUBLE,
	MAX_HIGH DOUBLE,
	MIN_CLOSE DOUBLE,
	MAX_CLOSE DOUBLE
);

CREATE TABLE SUMMARY_52_WK_BSE(
	SNAPSHOT_DT DATE,
	SC_CODE INT(11),
	MIN_LOW DOUBLE,
	MAX_HIGH DOUBLE,
	MIN_CLOSE DOUBLE,
	MAX_CLOSE DOUBLE
);

/*
CREATE TEMPORARY TABLE TMP1(
	ID BIGINT AUTO_INCREMENT,
	TRADE_DATE  DATE,
	SYMBOL      VARCHAR(30),
	OPEN        DOUBLE,
	HIGH        DOUBLE,
	LOW         DOUBLE,
	CLOSE       DOUBLE,
	VOLUME      BIGINT(20),
	PRIMARY KEY (ID)
);

CREATE TEMPORARY TABLE TMP2(
	ID BIGINT AUTO_INCREMENT,
	TRADE_DATE  DATE,
	SYMBOL      VARCHAR(30),
	OPEN        DOUBLE,
	HIGH        DOUBLE,
	LOW         DOUBLE,
	CLOSE       DOUBLE,
	VOLUME      BIGINT(20),
	PRIMARY KEY (ID)
);

INSERT INTO TMP1 (TRADE_DATE, SYMBOL, OPEN, HIGH, LOW, CLOSE, VOLUME) SELECT * FROM NYSE WHERE SYMBOL='VIX.IDX' AND TRADE_DATE >= '2010-04-14' ORDER BY TRADE_DATE ASC;	
INSERT INTO TMP2 (TRADE_DATE, SYMBOL, OPEN, HIGH, LOW, CLOSE, VOLUME) SELECT * FROM NYSE WHERE SYMBOL='VIX.IDX' AND TRADE_DATE >  '2010-04-14' ORDER BY TRADE_DATE ASC;	


SELECT	
	A.TRADE_DATE,
	B.TRADE_DATE,
	A.CLOSE PREV_CLOSE,
	B.LOW,
	B.HIGH,
	ROUND( (IF( A.CLOSE > B.HIGH, A.CLOSE, B.HIGH ) - IF( A.CLOSE > B.LOW, B.LOW, A.CLOSE ) ), 2) SPREAD,
	ROUND( ((((IF( A.CLOSE > B.HIGH, A.CLOSE, B.HIGH ) - IF( A.CLOSE > B.LOW, B.LOW, A.CLOSE ) ) - A.CLOSE)/A.CLOSE)*100.0)+100.0, 2) SPREAD_PC
FROM	
	TMP1 A,
	TMP2 B
WHERE	
	A.ID=B.ID;
---------------
SELECT
	A.TRADE_DATE,
	B.TRADE_DATE,
	A.CLOSE PREV_CLOSE,
	B.LOW,
	ROUND( ((B.LOW-A.CLOSE)/A.CLOSE)*100.0, 2) LOW_PC,
	B.CLOSE,
	ROUND( ((B.CLOSE-A.CLOSE)/A.CLOSE)*100.0, 2) CLOSE_PC
FROM
	TMP1 A,
	TMP2 B
WHERE
	A.ID=B.ID
	AND B.LOW < (A.CLOSE - (A.CLOSE * 0.06));

SELECT 
	(SELECT
		COUNT(*)
		/*
		A.TRADE_DATE,
		B.TRADE_DATE,
		A.CLOSE PREV_CLOSE,
		B.HIGH,
		ROUND( ((B.HIGH-A.CLOSE)/A.CLOSE)*100.0, 2) HIGH_PC,
		B.CLOSE,
		ROUND( ((B.CLOSE-A.CLOSE)/A.CLOSE)*100.0, 2) CLOSE_PC
		*/
	FROM
		TMP1 A,
		TMP2 B
	WHERE
		A.ID=B.ID
		AND B.HIGH > (A.CLOSE + (A.CLOSE * 0.00)) AND B.HIGH < (A.CLOSE + (A.CLOSE * 0.02))
	) _0_2;


SELECT 
	(SELECT
		COUNT(*)
		/*
		A.TRADE_DATE,
		B.TRADE_DATE,
		A.CLOSE PREV_CLOSE,
		B.HIGH,
		ROUND( ((B.HIGH-A.CLOSE)/A.CLOSE)*100.0, 2) HIGH_PC,
		B.CLOSE,
		ROUND( ((B.CLOSE-A.CLOSE)/A.CLOSE)*100.0, 2) CLOSE_PC
		*/
	FROM
		TMP1 A,
		TMP2 B
	WHERE
		A.ID=B.ID
		AND B.LOW < (A.CLOSE - (A.CLOSE * 0.00)) AND B.LOW > (A.CLOSE - (A.CLOSE * 0.02))
	) _0_2;

// Query to find symbols that are (5-10%) up from their 52 week lows
// Considers trade_date to be last business day.
// Considers 12 months of data only.
select * from 
	(select symbol, close, volume from nyse n1 where trade_date=(select max(trade_date) from nyse where symbol='DJI.IDX' and volume>0) and (symbol not like '%-%' and symbol not like '%.%') and (close*volume) > 100000000) a,
	SUMMARY_52_WK_NYSE b
where
	a.symbol=b.symbol and
	a.close between (b.min_low + (b.min_low*(5/100))) and (b.min_low + (b.min_low*(10/100)));

*/

/*
Query 1 (More than 80% Down from 52W-High)
=======
select * from 
	(select symbol, close, volume from nyse n1 where trade_date=(select max(trade_date) from nyse where symbol='DJI.IDX' and volume>0) and (symbol not like '%-%' and symbol not like '%.%') and (close*volume) > 1000000) a,
	SUMMARY_52_WK_NYSE b
where
	a.symbol=b.symbol and
	a.close <= (b.max_high - (b.max_high*(80/100)));

Query 2 (More than 85% Down from 52W-High and Last Close <= $1)
=======
select * from 
	(select symbol, close, volume from nyse n1 where trade_date=(select max(trade_date) from nyse where symbol='DJI.IDX' and volume>0) and (symbol not like '%-%' and symbol not like '%.%') and close <= 1) a,
	SUMMARY_52_WK_NYSE b
where
	a.symbol=b.symbol and
	a.close <= (b.max_high - (b.max_high*(85/100)));
*/


/*
// Query to find best BSE BLUECHIPS
select * from 
	(select SC_CODE, close, NO_OF_SHRS 'volume' from bse b1 where trade_date=(select max(trade_date) from bse where SC_CODE=532977 and NO_OF_SHRS>0) and (SC_CODE in (532977, 532454, 500103, 500087, 533278, 532868, 500010, 500180, 500182, 500440, 500696, 532174, 500209, 500875, 532532, 532286, 500510, 500520, 532500, 532541, 500312, 500325, 500112, 500900, 524715, 532540, 500570, 500400, 500470, 507685)) /*and (close*NO_OF_SHRS) > 100000000)*/) a,
	(select * from SUMMARY_52_WK_BSE where (SC_CODE in (532977, 532454, 500103, 500087, 533278, 532868, 500010, 500180, 500182, 500440, 500696, 532174, 500209, 500875, 532532, 532286, 500510, 500520, 532500, 532541, 500312, 500325, 500112, 500900, 524715, 532540, 500570, 500400, 500470, 507685))) b
where
	a.SC_CODE=b.SC_CODE;
-------------------------

// Query to find best BSE Stocks
select * from 
	(select SC_CODE, close, NO_OF_SHRS 'volume' from bse b1 where trade_date=(select max(trade_date) from bse where SC_CODE=532977 and NO_OF_SHRS>0) and (close*NO_OF_SHRS) > 100000000) a,
	SUMMARY_52_WK_BSE b
where
	a.SC_CODE=b.SC_CODE and
	a.close between (b.min_low + (b.min_low*(5/100))) and (b.min_low + (b.min_low*(10/100)));

*/

